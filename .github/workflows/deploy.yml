name: Deploy to Production

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # –î–æ–±–∞–≤–ª—è–µ–º —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ —É—Ä–æ–≤–Ω–µ job
    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}

    steps:
      # –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # –ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è —Ç–µ–≥–æ–≤
      
      # –î–æ–±–∞–≤–ª—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ node_modules
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # –î–æ–±–∞–≤–ª—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏ –ø—Ä–æ–≤–µ—Ä–∫—É Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      - name: Install dependencies
        run: npm ci

      # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ª–∏–Ω—Ç–µ—Ä–∞
      - name: Run linting
        run: npm run lint || true  # –Ω–µ —Ñ–µ–π–ª–∏–º –ø–∞–π–ø–ª–∞–π–Ω –∏–∑-–∑–∞ –ª–∏–Ω—Ç–µ—Ä–∞

      # –î–æ–±–∞–≤–ª—è–µ–º —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞
      - name: Build project
        run: npm run build

      # –û–±–Ω–æ–≤–ª—è–µ–º SSH setup
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # –£–ª—É—á—à–∞–µ–º –¥–µ–ø–ª–æ–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
      - name: Deploy to Server
        run: |
          # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
          set -e
          
          # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
          log() {
            echo "$(date '+%Y-%m-%d %H:%M:%S') - $1"
          }
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
          if ! ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 $DEPLOY_USER@$DEPLOY_HOST "exit"; then
            log "ERROR: Cannot connect to server"
            exit 1
          fi
          
          # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
          ssh $DEPLOY_USER@$DEPLOY_HOST "if [ -d $DEPLOY_PATH ]; then cp -r $DEPLOY_PATH ${DEPLOY_PATH}_backup_$(date +%Y%m%d_%H%M%S); fi"
          
          # –î–µ–ø–ª–æ–∏–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
          log "Starting deployment..."
          ssh $DEPLOY_USER@$DEPLOY_HOST "rm -rf $DEPLOY_PATH && \
            git clone https://github.com/MakShuk/tg-web-app.git $DEPLOY_PATH && \
            cd $DEPLOY_PATH && \
            docker compose down --remove-orphans && \
            docker compose up -d --build"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          if ! ssh $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && docker compose ps | grep -q 'Up'"; then
            log "ERROR: Containers failed to start"
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞
            ssh $DEPLOY_USER@$DEPLOY_HOST "rm -rf $DEPLOY_PATH && mv ${DEPLOY_PATH}_backup_* $DEPLOY_PATH"
            exit 1
          fi
          
          log "Deployment completed successfully"
          
          # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ 3 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö)
          ssh $DEPLOY_USER@$DEPLOY_HOST "cd $(dirname $DEPLOY_PATH) && ls -dt ${DEPLOY_PATH}_backup_* 2>/dev/null | tail -n +4 | xargs -r rm -rf"

      # –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
      - name: Notify about deployment
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "üéâ Deployment successful!"
          else
            echo "‚ùå Deployment failed!"
          fi